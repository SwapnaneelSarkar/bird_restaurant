plugins {
    id "com.android.application"
    id 'com.google.gms.google-services'
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

// Load keystore properties
def keystorePropertiesFile = rootProject.file('key.properties')
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    println "[DEBUG] keystoreProperties['storeFile']: ${keystoreProperties['storeFile']}"
}

android {
    namespace = "com.birdpartner.app"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        // Enable core library desugaring for flutter_local_notifications
        coreLibraryDesugaringEnabled = true
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
    
    // Add configurations for Android 15 compatibility
    buildFeatures {
        buildConfig true
        viewBinding true
    }

    defaultConfig {
        applicationId = "com.birdpartner.app"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode = 22
        versionName = "3.0.15"
        multiDexEnabled true
        
        // Android 15 compatibility for Play Core
        // Note: This is a placeholder for potential manifest-level fixes
        
        // Add these configurations for better stability and 16KB page size support
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
        
        // Enable 16KB memory page size support for ARM64
        ndk {
            abiFilters 'arm64-v8a'
        }
        
        // Add configurations for Android 15 compatibility
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            if (keystoreProperties['keyAlias']) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Add configurations for Android 15 compatibility
            ndk {
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
        debug {
            minifyEnabled false
            debuggable true
            // Add these for better debugging and stability
            renderscriptOptimLevel 3
        }
    }

    // Add this block to resolve dependency conflicts
    configurations.all {
        resolutionStrategy {
            // Force exclude the problematic BouncyCastle version
            exclude group: 'org.bouncycastle', module: 'bcprov-jdk18on'
            // Force a compatible version if needed
            force 'org.bouncycastle:bcprov-jdk15on:1.70'
            
            // Force specific Play library versions for compatibility
            force 'com.google.android.play:integrity:1.3.0'
            
            // Exclude all Play Core components for Android 15 compatibility
            exclude group: 'com.google.android.play', module: 'core'
            exclude group: 'com.google.android.play', module: 'core-common'
        }
    }
    



    
    // Add configurations for better Android 15 compatibility
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        // Disable warnings about Play Core compatibility
        disable 'ObsoleteLintCustomCheck'
        disable 'DeprecatedApi'
    }
    
    aaptOptions {
        cruncherEnabled false
    }
    packagingOptions {
        pickFirst '**/META-INF/DEPENDENCIES'
        pickFirst '**/META-INF/LICENSE'
        pickFirst '**/META-INF/LICENSE.txt'
        pickFirst '**/META-INF/NOTICE'
        pickFirst '**/META-INF/NOTICE.txt'
        pickFirst '**/META-INF/ASL2.0'
        pickFirst '**/META-INF/LGPL2.1'
        
        // Support for 16KB memory page sizes
        jniLibs {
            useLegacyPackaging = false
        }
        
        // Exclude problematic Play Core metadata files but keep core functionality
        exclude 'META-INF/play-core-version.properties'
        exclude 'META-INF/play-core-version.txt'
    }
}

flutter {
    source = "../.."
}

dependencies {
    // Core library desugaring for flutter_local_notifications
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    
    // Existing Firebase dependencies
    implementation platform('com.google.firebase:firebase-bom:33.5.1')
    implementation('com.google.firebase:firebase-auth-ktx')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    
    // Firebase Messaging for push notifications
    implementation 'com.google.firebase:firebase-messaging-ktx'
    
    // Existing dependencies
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.gms:play-services-auth:21.3.0'
    implementation 'com.google.android.gms:play-services-base:18.5.0'
    implementation('com.google.android.recaptcha:recaptcha:18.6.1')
    implementation 'androidx.browser:browser:1.8.0'
    
    // Play Integrity API for Firebase Phone Auth - use modern Play libraries compatible with Android 15
    implementation 'com.google.android.play:integrity:1.3.0'
    
    // Flutter requires Play Core for deferred components and split compatibility
    // Note: Play Core 1.10.3 is deprecated but Flutter still needs it
    implementation 'com.google.android.play:core:1.10.3'
    
    // Additional dependencies for better stability
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.window:window:1.2.0'
}